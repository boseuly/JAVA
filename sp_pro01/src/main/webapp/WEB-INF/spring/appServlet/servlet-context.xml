<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd"> 

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/static/**" location="/resources/" /> <!-- resources : css,js 를 저장하는 경로인데, 이걸 static으로 매핑함 -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<beans:property name="prefix" value="/WEB-INF/views/" /> <!-- 여기 구성을 통해 jsp파일이 어디 경로에 있는지 지정을 해두는 것이다. -->
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.myhome.web" /> 
	<!-- context:component-scan 명시해주고 클래스에 @Component어노테이션을 작성해주면 context:annotation-config를 작성할 필요가 없음  -->
	
	<!-- 데이터베이스 설정 -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"></beans:property>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521/XEPDB1"></beans:property>
		<beans:property name="username" value="puser1"></beans:property>
		<beans:property name="password" value="puser1"></beans:property>
	</beans:bean>
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"></beans:property>
		<beans:property name="mapperLocations" value="classpath:/mybatis/mapper/*.xml"></beans:property> <!-- department.xml 하나밖에 설정 안 했기 때문에  -->
	</beans:bean>
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg> 
	</beans:bean>
	
	<!-- 얘가 하는 역할 : @Transactional 어노테이션을 찾는다. -->
	<tx:annotation-driven transaction-manager="transactionManager"/> 
	
	<!-- 파일 업로드 하려면 필요한 설정 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></beans:bean>
	
	<!-- Interceptor 사용하려면 등록해야 한다. -->
	<interceptors>
		<interceptor>
			<!-- 모든 url주소에 대해서 아래의 interceptor가 적용되도록 하겠다는 의미 -->
			<mapping path="/**"/>
			<beans:bean class="com.myhome.web.interceptor.LoggingInterceptor"></beans:bean>
		</interceptor>
		<interceptor>
			<!-- 모든 url주소에 대해서 아래의 interceptor가 적용되도록 하겠다는 의미 -->
			<mapping path="/**"/>
			<beans:bean class="com.myhome.web.interceptor.AdminInterceptor"></beans:bean>
		</interceptor>
	</interceptors>
	
	<!-- aop 사용하기 위한 설정 이렇게 하면 @Aspect라고 되어있는 클래스의 객체를 생성해줌-->
	<aop:aspectj-autoproxy/>
	
	<beans:bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop key="com.myhome.web.exception.UnauthorizedException">error/401</beans:prop>
				<beans:prop key="com.myhome.web.exception.ForbiddenException">error/403</beans:prop>
				<beans:prop key="com.myhome.web.exception.PermissionDeniedDataAccessException">error/permission</beans:prop>
				<beans:prop key="Exception">error/403</beans:prop>
			</beans:props>
		</beans:property>
		<beans:property name="statusCodes">
			<beans:props>
				<beans:prop key="403">error/403</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
</beans:beans>
