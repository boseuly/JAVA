<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="empBoardsMapper">
 	<resultMap type="boardDto" id="empBoardMap">
 		<constructor>
 			<idArg column="ID" javaType="_int"/> <!-- 기본키 속성을 의미 -->
 		</constructor>
 		<id column="ID" property="id"/>		<!-- 구분자 역할을 하는 속성(기본키) -->
 		<result column="TITLE" property="title"/>
 		<result column="EMPID" property="empId"/>
 		<result column="CREATEDATE" property="createDate"/>
 		<result column="VIEW_CNT" property="viewCnt"/>
 		<result column="LIKE" property="like"/>
 		<association property="empObj" javaType="empDto"> 	<!-- association : 1:1 관계의 테이블을 조인할 때 사용한다. -->
 			<id column="EMPID" property="empId"/>			<!-- empId가 기본키 -->
			<result column="EMPNAME" property="empName"/>	<!-- empName -> 근데 왜 다른 것들은 안 매핑 안 해주는지 의문 -->
 		</association>
 	</resultMap>
 	
 	<select id="getNextSeq" resultType="_int"> <!-- 이렇게 시퀀스 번호를 가져와서 empId를 해당 시퀀스 번호로 저장해준다. -->
 		SELECT EMP_BOARDS_SEQ.NEXTVAL FROM DUAL			
 	</select>
 	<select id="selectBoardAll" resultType="boardDto">
 		SELECT ID
 			 , TITLE
 			 , CONTENT
 			 , EMPID
 			 , CREATEDATE
 			 , VIEW_CNT AS viewCnt
 			 , "LIKE"
 		FROM EMP_BOARDS
 	</select>
 	<insert id="insertDataAutoSeq" parameterType="boardDto" useGeneratedKeys="true"
 			keyProperty="id" keyColumn="ID" >
 		INSERT INTO EMP_BOARDS(ID, TITLE, CONTENT, EMPID, CREATEDATE)
		VALUES(EMP_BOARDS_SEQ.NEXTVAL, #{title}, #{content}, #{empId}, SYSDATE)
 	</insert>
 	
 	<insert id="insertData" parameterType="boardDto">
 		INSERT INTO EMP_BOARDS(ID, TITLE, CONTENT, EMPID, CREATEDATE)
		VALUES(#{id}, #{title}, #{content}, #{empId}, SYSDATE)
 	</insert>
 	<select id="selectData" resultType="boardDto">
 		SELECT ID
 			 , TITLE
 			 , CONTENT
 			 , EMPID
 			 , CREATEDATE
 			 , VIEW_CNT AS viewCnt
 			 , "LIKE"
 		FROM EMP_BOARDS
 		WHERE ID = #{id}
 	</select>
 	<update id="modifyBoard" parameterType="boardDto">
 		UPDATE EMP_BOARDS
 		   SET TITLE = #{title}
 		   	 , CONTENT = #{content}
 		 WHERE ID = #{id} <!-- 게시물의 아이디 -->
 	</update>
 	
 	<delete id="deleteBoard">
 		DELETE FROM EMP_BOARDS WHERE ID = #{id}
 	</delete>
 	
 	<delete id="deleteStatisData">
 		DELETE FROM EMP_BOARDS_STATISTICS WHERE BID = #{id}
 	</delete>
 	
 	
 	<update id="updateViewCnt" parameterType="boardDto">
 		UPDATE EMP_BOARDS
 		   SET VIEW_CNT = #{viewCnt} + 1
 		 WHERE ID = #{id}
 	</update>
 	<update id="updateLike" parameterType="boardDto">
 		UPDATE EMP_BOARDS
 		   SET "LIKE" = #{like}
 		 WHERE ID = #{id}
 	</update>
 	
 	<select id="selectStatis" resultType="boardStatisDto" parameterType="boardStatisDto">
 		SELECT ID
 			 , EMPID
 			 , BID
 			 , ISVIEW AS "view"
 			 , LATEST_DATE1 AS latestView
 			 , ISLIKE AS "like"
 			 , LATEST_DATE2 AS latestLike
 		  FROM EMP_BOARDS_STATISTICS
 		 WHERE EMPID = #{empId}
 		   AND BID = #{bId}
 	</select>
 	<insert id="insertStatis" parameterType="boardStatisDto">
 		INSERT INTO EMP_BOARDS_STATISTICS
 		VALUES (EMP_BOARDS_STATISTICS_SEQ.NEXTVAL
 			  , #{empId}, #{bId}, 'Y', SYSDATE, 'N', NULL) <!-- EMP -->
 	</insert>
 	<update id="updateStatis" parameterType="boardStatisDto">
 		UPDATE EMP_BOARDS_STATISTICS
 		   SET LATEST_DATE1 = SYSDATE
 		 WHERE EMPID = #{empId}
 		   AND BID = #{bId}  <!-- bId는 게시글 번호임 -->
 	</update>
 	<!-- 추천에 대한 변경 업데이트 -->
 	<update id="updateLikeStatis" parameterType="boardStatisDto">
 		UPDATE EMP_BOARDS_STATISTICS
 		   SET LATEST_DATE2 = SYSDATE
 		   <choose>
 		   		<when test="like"> <!-- like가 true라면 -->
 		   		 	, ISLIKE = 'Y' 
 		   		</when>
 		   		<otherwise>			<!-- like가 false라면 -->
	 		   	 	, ISLIKE = 'N'
 		   		</otherwise>
 		   </choose>
 		 WHERE EMPID = #{empId}
 		   AND BID = #{bId}  <!-- bId는 게시글 번호임 -->
 	</update>
 	<!-- 페이징 -->
 	<select id="getTotalRows" resultType="_int" parameterType="string">
		SELECT COUNT(*) 
		FROM EMP_BOARDS
		<if test="search != null">
			WHERE TITLE LIKE '%' || #{search} || '%' <!-- 앞,뒤가 있어도 되고 없어도 되고, 중간에 search가 있어도 되고 없어도 되고, -->
		</if>
	</select>
	<select id="selectPage" resultMap="empBoardMap" parameterType="string">
		SELECT B.ID
			 , B.TITLE
		     , B.EMPID
		     , E.FIRST_NAME || ' ' || E.LAST_NAME AS EMPNAME
		     , B.CREATEDATE
		     , B.VIEW_CNT
		     , B."LIKE"
		  FROM EMP_BOARDS B
		  JOIN EMPLOYEES E
		    ON B.EMPID = E.EMPLOYEE_ID
		    <if test="search != null">
			WHERE TITLE LIKE '%' || #{search} || '%'
			</if>
		 ORDER BY ID DESC
	</select>
 </mapper>